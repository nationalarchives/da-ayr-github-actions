
name: terraform-environments-action
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      tf_dir:
        type: string
        required: true
    secrets:
      AWS_ROLE:
        required: true
      AWS_BUCKET_NAME:
        required: true
      AWS_BUCKET_KEY_NAME:
        required: true
permissions:
  id-token: write
  contents: read
  pull-requests: write
jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Test Build
        run: |
          pwd
          ls -la
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configre AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: eu-west-2
          role-session-name: Github-OIDC-TERRAFROM
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5
      - name: Copy Config Script
        run: |
          pwd
          whoami
          ls
          cat /etc/os-release
          lsb_release -a
          hostnamectl
          sudo apt-get install jq -y
          cd terraform/environment/dev

          TF_VARS=$(aws ssm get-parameter --name "terraform-tfvars" --region eu-west-2 | jq .Parameter.Value | sed -r 's/["]+//g' | sed "s/'/\"/g" )
          echo $TF_VARS > terraform.tfvars

          TF_AUTO_VARS=$(aws ssm get-parameter --name "backend-config-auto-tfvars" --region eu-west-2 | jq .Parameter.Value | sed -r 's/["]+//g' | sed "s/'/\"/g" )
          echo $TF_AUTO_VARS > backend-config.auto.tfvars
      - name: Terraform fmt
        id: fmt
        run: terraform -fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env: 
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCEKT_KEY_NAME }}
        run: |
          pwd
          ls
          cd terraform/environments/dev/
          pwd
          terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key={AWS_BUCKET_KEY_NAME}"
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terrafrom plan
        id: plan
        run: |
          pwd
          ls
          cd terraform/environments/dev/
          terraform plan -no-color

        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome =='failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false 
